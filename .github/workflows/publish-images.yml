name: Build and Publish Container Images

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_BASE: ${{ github.repository }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BASE }}-bluesky

      # Build and push the 'latest' tag
      - name: Build and push latest
        uses: docker/build-push-action@v5
        with:
          context: ./compose/bluesky
          file: ./compose/bluesky/Containerfile.latest
          push: true
          # Use the standard meta outputs for the base tags plus ":latest"
          tags: ${{ steps.meta.outputs.tags }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BASE }}-bluesky:latest
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64

      # Build and push the 'rolling' tag, but don't fail the entire job if it fails
      - name: Build and push rolling
        if: always()
        continue-on-error: true
        uses: docker/build-push-action@v5
        with:
          context: ./compose/bluesky
          file: ./compose/bluesky/Containerfile.rolling
          push: true
          # Apply just the rolling tag, or combine if desired
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BASE }}-bluesky:rolling
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
