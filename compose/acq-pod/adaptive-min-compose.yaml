---
version: "3"
volumes:
  bitnami-kafka:
  bitnami:
  data:
  mongo:

services:
  # zmq bridge
  zmq-proxy:
    image: ghcr.io/bluesky/bluesky-pods-bluesky:main
    command: bluesky-0MQ-proxy 4567 5678

  # kafka
  zookeeper:
    image: "docker.io/bitnami/zookeeper:latest"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    volumes:
      - bitnami:/bitnami
  kafka:
    image: "docker.io/bitnami/kafka:latest"
    volumes:
      - bitnami-kafka:/bitnami/kafka
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:29092,PLAINTEXT_HOST://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_MESSAGE_MAX_BYTES=1048588
    depends_on:
      zookeeper:
        condition: service_started

  # mongo
  mongo:
    image: docker.io/library/mongo:latest
    tty:
    volumes:
      - mongo:/data/db

  # tiled
  tld:
    image: ghcr.io/maffettone/tiled-sub
    volumes:
      - data:/nsls2/data/mad
      - ../../bluesky_config/tiled:/usr/local/share/tiled
    command: tiled serve config /usr/local/share/tiled

  # inserter
  mongo_inserter:
    image: ghcr.io/bluesky/bluesky-pods-bluesky
    volumes:
      - ../..//bluesky_config/scripts:/app
    command: python3 mongo_consumer.py --kafka_server=kafka:29092 --kafka_group=acq_local_consumers --mongo_uri=mongodb://mongo:27017
    working_dir: /app
    init: true
    depends_on:
      mongo:
        condition: service_started
      kafka:
        condition: service_started

  # redis
  redis:
    image: docker.io/redis

  # jupyter spy
  jupyter:
    image: quay.io/jupyter/scipy-notebook
    command: start-notebook.py --IdentityProvider.token='' --NotebookApp.base_url='/jlab' --NotebookApp.allow_origin='*'
    volumes:
      - ../..//bluesky_config/:/home/jovyan/config
      - ../../bluesky_config/databroker:/usr/local/share/intake
      - ../../bluesky_config/diffraction-sim:/home/jovyan/diffraction-sim

  # QS parts
  # Loads QServer looking at an ipython profile named profile_qserver, optionally loaded from BLUESKY_PROFILE_DIR
  queue_manager:
    image: ghcr.io/bluesky/bluesky-pods-bluesky:main
    command: start-re-manager --startup-profile qserver --keep-re --zmq-publish-console ON --redis-addr redis
    environment:
      - IPYTHONDIR=/usr/local/share/ipython
      - PYTHONPATH=/usr/local/share/ipython
    volumes:
      - ${BLUESKY_PROFILE_DIR:-../../bluesky_config/ipython/profile_default}:/usr/local/share/ipython/profile_qserver:ro
      - ../../bluesky_config/databroker:/usr/local/share/intake:ro
      - ../../bluesky_config/ipython/localdevs.py:/usr/local/share/ipython/localdevs.py:ro
      - ../../bluesky_config/databroker/mad-tld.yml:/usr/etc/tiled/profiles/mad-tld.yml:ro
      - ../../bluesky_config/happi:/usr/local/share/happi:ro
    depends_on:
      kafka:
        condition: service_started
      redis:
        condition: service_started

  qs_api:
    image: ghcr.io/bluesky/bluesky-pods-bluesky:main
    command: uvicorn --host qs_api --port 60610 bluesky_httpserver.server:app
    environment:
      - QSERVER_HTTP_SERVER_SINGLE_USER_API_KEY=mad
      - QSERVER_ZMQ_CONTROL_ADDRESS=tcp://queue_manager:60615
      - QSERVER_ZMQ_INFO_ADDRESS=tcp://queue_manager:60625
    depends_on:
      queue_manager:
        condition: service_started

  agent:
    image: bluesky
    command: uvicorn bluesky_adaptive.server:app --host 0.0.0.0 --root-path /kmeans-agent
    environment:
      - TILED_API_KEY="ABCDABCD"
      - HTTPSERVER_API_KEY=mad
      - BS_AGENT_STARTUP_SCRIPT_PATH=/src/scripts/kmeans-agent.py
    volumes:
      - ../../bluesky_config/scripts:/src/scripts/:ro
    depends_on:
      qs_api:
        condition: service_started

  agent-ui:
    image: ghcr.io/maffettone/bluesky-adaptive-ui:latest
    command: python3 /src/bluesky-adaptive-ui/bluesky_adaptive_ui/default_dash_app/app.py --agent-address kmeans-agent --agent-port 8000
    environment:
      - DASH_REQUEST_PATHNAME_PREFIX=/kmeans-agent-ui/
    volumes:
      - ../../../bluesky-adaptive-ui:/src/bluesky-adaptive-ui:ro
    depends_on:
      kmeans-agent:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8050"]
      interval: 20s
      timeout: 10s
      retries: 5

  proxy:
    image: docker.io/nginx
    init: true
    ports:
      - "127.0.0.1:11973:11973"
    volumes:
      - ../../bluesky_config/nginx/compose.conf:/etc/nginx/nginx.conf:ro
      - ../../bluesky_config/nginx/locs.d:/etc/nginx/locs.d:ro
      - ../../bluesky_config/nginx/index.html:/var/www/html/index.html:ro
    depends_on:
      jupyter:
        condition: service_started
      qs_api:
        condition: service_started
      tld:
        condition: service_started
      kmeans-agent-ui:
        condition: service_healthy
